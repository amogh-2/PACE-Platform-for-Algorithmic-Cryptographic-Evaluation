AES-256 in CBC Mode

AES (Advanced Encryption Standard) in Cipher Block Chaining (CBC) mode is a powerful encryption method 
that secures data by encrypting it in 128-bit blocks. With a 256-bit key, it offers strong protection against 
brute-force attacks. In CBC mode, each block of plaintext is XORed with the previous ciphertext block before encryption,
 ensuring that identical inputs produce unique outputs. An Initialization Vector (IV) is used for the first block to add
  randomness. This mode enhances security but requires careful IV management and key handling for safe encryption and decryption.

  AES-128 in GCM Mode

AES (Advanced Encryption Standard) in Galois/Counter Mode (GCM) is a high-performance encryption method that provides both 
data confidentiality and integrity. Using a 128-bit key, it encrypts data in blocks while generating an authentication tag to 
detect tampering. GCM operates in counter mode, ensuring fast encryption, and uses Galois field multiplication for authentication. 
Its efficiency and built-in integrity check make it ideal for secure communications, such as TLS and VPNs. Proper nonce management is 
crucial to maintaining security.

AES-256 in GCM Mode

AES (Advanced Encryption Standard) in Galois/Counter Mode (GCM) is a secure and efficient encryption method 
that provides both confidentiality and authentication. With a 256-bit key, it offers strong protection against 
attacks while ensuring data integrity using an authentication tag. GCM operates in counter mode, making encryption 
fast and parallelizable, while Galois field multiplication ensures tamper detection. It is widely used in secure 
communications like TLS, VPNs, and encrypted storage. Proper nonce handling is essential for maintaining security.

ChaCha20 Encryption Algorithm

ChaCha20 is a high-speed, stream cipher designed for secure and efficient encryption. It uses a 256-bit key and a 
unique nonce to generate a pseudorandom keystream, which is then XORed with plaintext for encryption. Unlike AES,
 ChaCha20 is lightweight, resistant to side-channel attacks, and performs well on both hardware and software. 
 It is widely used in TLS, VPNs, and secure messaging for its speed, security, and reliability.

 ChaCha20-Poly1305 Encryption

ChaCha20-Poly1305 is a high-speed, authenticated encryption algorithm that ensures both data confidentiality and integrity.
 It combines the ChaCha20 stream cipher for encryption with the Poly1305 authentication function to detect tampering.
  Using a 256-bit key and a unique nonce, it provides fast, secure, and efficient encryption, even on low-power devices.
   Widely used in TLS, VPNs, and secure messaging, it is preferred for its resistance to side-channel attacks and consistent
    performance across hardware and software.


                                          "Based on strength page"

Avalanche Effect: This measures the degree to which a small change in the input (such as flipping a single bit) causes a 
significant change in the output. A strong cryptographic algorithm exhibits a high avalanche effect, ensuring that even the 
slightest variation in input results in a drastically different output, enhancing security.

Correlation Coefficient: The correlation coefficient measures the relationship between the input and output of the algorithm. 
A low correlation coefficient, ideally close to zero, indicates that there is minimal predictable relationship between input and output. 
This is crucial for ensuring the algorithmâ€™s resistance to attacks that try to exploit input-output patterns.

Entropy: Entropy quantifies the randomness or unpredictability in the output of a cryptographic algorithm. Higher entropy means that 
the output is more random, making it harder for an attacker to predict or reverse-engineer the results. A higher entropy value indicates 
a stronger, more secure encryption.

Key Size: Key size refers to the length of the cryptographic key used in the algorithm. Larger key sizes increase the difficulty of 
brute-force attacks, as they expand the possible key space an attacker must search through. Therefore, a larger key size typically 
correlates with a stronger, more secure algorithm.


                                            "Based on media types page"

Encryption Time: The amount of time it takes to encrypt the given media file (e.g., .txt, .png, .mp3, .mp4) 
using a specific cryptographic algorithm. It reflects how long it takes for the algorithm to transform the file into an encrypted form.

Decryption Time: The time required to decrypt the encrypted media file back to its original form using the corresponding decryption key. 
This is an important metric for understanding how fast a system can restore encrypted data.

Execution Time: The total time taken for the entire encryption or decryption process to complete. It includes both the time for encryption 
or decryption itself and any additional operations performed by the algorithm.

Throughput: The rate at which data is processed during encryption or decryption, typically measured in bytes per second (Bps). 
Higher throughput indicates better performance in handling large files or high volumes of data.


                                              "Based on processor page"
Encryption Time: The amount of time required by the cryptographic algorithm to convert a file into its encrypted form.

Decryption Time: The time taken by the cryptographic algorithm to convert the encrypted file back to its original, unencrypted state.

Execution Time: The total time it takes for the entire process, including both encryption and decryption, to be completed by the algorithm.

Operating System: The software platform (e.g., Windows, Linux, macOS) on which the benchmark is being run. The performance of the algorithm can 
be influenced by the OS.

CPU Model: The specific processor (e.g., Intel Core i7, AMD Ryzen 5) used during the benchmarking process. The CPU model can affect 
the efficiency of encryption and decryption operations.

Users can test files of different sizes here to measure the impact of file size on these parameters.







